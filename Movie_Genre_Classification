{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"00u_aSFzC6in"},"outputs":[],"source":["#Movie_genre_classfication"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Yf3JJir9DI90"},"outputs":[],"source":["#WORK FLOW\n","'''\n","   1)Setting the data\n","   2)Creating the model\n","   3)Training the model\n","   4)Prediction\n","'''\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"QGjidUARDJAN"},"outputs":[],"source":["#unzipping the kaggle dataset\n","!unzip train_data.txt.zip"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tNRUFKczDJCu"},"outputs":[],"source":["#Importing the important libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8mZrAt_MDJFA"},"outputs":[],"source":["#from scikit-learn\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score, classification_report\n","from sklearn.preprocessing import LabelEncoder"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Mx7Xx2awDJHh"},"outputs":[],"source":["#from ntlk - for natural language processing\n","import nltk\n","from nltk.corpus import stopwords\n","from nltk.stem import PorterStemmer\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mpL8r8OdDJJ5"},"outputs":[],"source":["#for data visualization\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1712771057332,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"n-d1sDBfDJMg","outputId":"beb1c298-a2e7-481e-b41b-ce7ab91c7a19"},"outputs":[{"name":"stderr","output_type":"stream","text":["<ipython-input-9-1fda5cc974a0>:1: ParserWarning: Falling back to the 'python' engine because the 'c' engine does not support regex separators (separators > 1 char and different from '\\s+' are interpreted as regex); you can avoid this warning by specifying engine='python'.\n","  movie_genre = pd.read_csv(\"train_data.txt\",sep = ':::',names = [\"title\",\"genre\",\"description\"])\n"]}],"source":["movie_genre = pd.read_csv(\"train_data.txt\",sep = ':::',names = [\"title\",\"genre\",\"description\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1712771057823,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"eMB19xSkDJO2","outputId":"82b90d44-daf2-4001-a657-589a8c471fa0"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"movie_genre\",\n  \"rows\": 9560,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9560,\n        \"samples\": [\n          \" Sakura no sono (1990) \",\n          \" On Golden Pond (2001) \",\n          \" Hat mua roi bao l\\u00e2u (2005) \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \" sport \",\n          \" sci-fi \",\n          \" animation \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9556,\n        \"samples\": [\n          \" Religious prejudice and racial dogmatism are the curse of Mohanpur, a backwater village out of touch with progress in the contemporary world. But, as depicted in the film Brihonnola, humanity has the strength to combat and neutralist the poisonous effects of these evils on the lives of the villagers.\",\n          \" Molinat is assigned to the case of a man found with a bullet in his ear on the shore of a little Atlantic coast resort he knows well. Indeed, he used to live there before his wife disappeared at sea, never to be found again. As the ocean rejects a new corpse everyday, the mystery thickens and the list of potential suspects grows longer. This slows Molinat's progress as much as the cumbersome Leroyer, sent in to spy on him and hopefully impede his progress. The tension mounts and the ring involving the three young ladies in the grey mansion, the village idiot and the real estate agent starts spinning out of control.\",\n          \" After a disastrous pitch to a mega-corporation sees the American Dream slip through his fingers, advertising and marketing \\\"guru\\\" Michael finds himself promoting small, green and eco-friendly companies in a desperate attempt to pay the rent - and manage a collection of wacky yet wonderful employees and clients.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"movie_genre"},"text/html":["\n","  <div id=\"df-af2d68f9-e228-4b55-80c3-301dc46cabfe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>genre</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Oscar et la dame rose (2009)</td>\n","      <td>drama</td>\n","      <td>Listening in to a conversation between his do...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cupid (1997)</td>\n","      <td>thriller</td>\n","      <td>A brother and sister with a past incestuous r...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Young, Wild and Wonderful (1980)</td>\n","      <td>adult</td>\n","      <td>As the bus empties the students for their fie...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>The Secret Sin (1915)</td>\n","      <td>drama</td>\n","      <td>To help their unemployed father make ends mee...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>The Unrecovered (2007)</td>\n","      <td>drama</td>\n","      <td>The film's title refers not only to the un-re...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af2d68f9-e228-4b55-80c3-301dc46cabfe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-af2d68f9-e228-4b55-80c3-301dc46cabfe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-af2d68f9-e228-4b55-80c3-301dc46cabfe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18d9dc9b-a873-4354-84d3-ecf75f1a7684\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18d9dc9b-a873-4354-84d3-ecf75f1a7684')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18d9dc9b-a873-4354-84d3-ecf75f1a7684 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["                                title       genre  \\\n","1       Oscar et la dame rose (2009)       drama    \n","2                       Cupid (1997)    thriller    \n","3   Young, Wild and Wonderful (1980)       adult    \n","4              The Secret Sin (1915)       drama    \n","5             The Unrecovered (2007)       drama    \n","\n","                                         description  \n","1   Listening in to a conversation between his do...  \n","2   A brother and sister with a past incestuous r...  \n","3   As the bus empties the students for their fie...  \n","4   To help their unemployed father make ends mee...  \n","5   The film's title refers not only to the un-re...  "]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["movie_genre.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1712771062194,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"ilhjYuVuDJRW","outputId":"5fb950d0-02e5-4dc2-a7b6-b6b183dd893e"},"outputs":[{"data":{"text/plain":["(9560, 3)"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["movie_genre.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":412,"status":"ok","timestamp":1712771067003,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"9PK9ev61DJTs","outputId":"3f16af62-79dc-4b34-cb7f-eaf69f363cf6"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 9560 entries, 1 to 9560\n","Data columns (total 3 columns):\n"," #   Column       Non-Null Count  Dtype \n","---  ------       --------------  ----- \n"," 0   title        9560 non-null   object\n"," 1   genre        9560 non-null   object\n"," 2   description  9560 non-null   object\n","dtypes: object(3)\n","memory usage: 298.8+ KB\n"]}],"source":["movie_genre.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1712771070284,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"TCxcyFkoDJWL","outputId":"20cb688a-39bc-4402-d3a6-b1e594428594"},"outputs":[{"data":{"text/plain":["title          0\n","genre          0\n","description    0\n","dtype: int64"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["movie_genre.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":434,"status":"ok","timestamp":1712771073143,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"swCC5EPNDJY4","outputId":"dd6bb86c-b41e-4e0c-e5bd-dccc18a2dc78"},"outputs":[{"data":{"text/plain":["genre\n"," drama           2365\n"," documentary     2307\n"," comedy          1308\n"," short            897\n"," horror           379\n"," thriller         313\n"," action           236\n"," western          194\n"," reality-tv       159\n"," family           138\n"," music            130\n"," adventure        129\n"," romance          114\n"," sci-fi           114\n"," adult            114\n"," animation         85\n"," sport             78\n"," crime             74\n"," talk-show         71\n"," fantasy           65\n"," mystery           56\n"," musical           52\n"," biography         47\n"," history           45\n"," game-show         37\n"," news              31\n"," war               22\n","Name: count, dtype: int64"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["movie_genre['genre'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EkQ-D-EWDJbl"},"outputs":[],"source":["label_encoder = LabelEncoder()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1712771096372,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"DDdOYimSDJeF","outputId":"7e24b805-b46d-4a9e-fcf3-d8fb0fbf87b6"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"movie_genre\",\n  \"rows\": 9560,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9560,\n        \"samples\": [\n          \" Sakura no sono (1990) \",\n          \" On Golden Pond (2001) \",\n          \" Hat mua roi bao l\\u00e2u (2005) \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 0,\n        \"max\": 26,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          22,\n          20,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9556,\n        \"samples\": [\n          \" Religious prejudice and racial dogmatism are the curse of Mohanpur, a backwater village out of touch with progress in the contemporary world. But, as depicted in the film Brihonnola, humanity has the strength to combat and neutralist the poisonous effects of these evils on the lives of the villagers.\",\n          \" Molinat is assigned to the case of a man found with a bullet in his ear on the shore of a little Atlantic coast resort he knows well. Indeed, he used to live there before his wife disappeared at sea, never to be found again. As the ocean rejects a new corpse everyday, the mystery thickens and the list of potential suspects grows longer. This slows Molinat's progress as much as the cumbersome Leroyer, sent in to spy on him and hopefully impede his progress. The tension mounts and the ring involving the three young ladies in the grey mansion, the village idiot and the real estate agent starts spinning out of control.\",\n          \" After a disastrous pitch to a mega-corporation sees the American Dream slip through his fingers, advertising and marketing \\\"guru\\\" Michael finds himself promoting small, green and eco-friendly companies in a desperate attempt to pay the rent - and manage a collection of wacky yet wonderful employees and clients.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"movie_genre"},"text/html":["\n","  <div id=\"df-e662bc49-69ad-4c8b-84b2-944513f6e67a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>genre</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Oscar et la dame rose (2009)</td>\n","      <td>8</td>\n","      <td>Listening in to a conversation between his do...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cupid (1997)</td>\n","      <td>24</td>\n","      <td>A brother and sister with a past incestuous r...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Young, Wild and Wonderful (1980)</td>\n","      <td>1</td>\n","      <td>As the bus empties the students for their fie...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>The Secret Sin (1915)</td>\n","      <td>8</td>\n","      <td>To help their unemployed father make ends mee...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>The Unrecovered (2007)</td>\n","      <td>8</td>\n","      <td>The film's title refers not only to the un-re...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9556</th>\n","      <td>No Stone Unturned (2017)</td>\n","      <td>7</td>\n","      <td>Alex Gibney reopens the mysterious unsolved c...</td>\n","    </tr>\n","    <tr>\n","      <th>9557</th>\n","      <td>La vraie nature de Bernadette (1972)</td>\n","      <td>8</td>\n","      <td>A woman imbued with naturalistic and libertar...</td>\n","    </tr>\n","    <tr>\n","      <th>9558</th>\n","      <td>The Comedy of Errors (2012)</td>\n","      <td>5</td>\n","      <td>Mendocino College Theatre Department presents...</td>\n","    </tr>\n","    <tr>\n","      <th>9559</th>\n","      <td>Beyond Good &amp; Evil (2008)</td>\n","      <td>8</td>\n","      <td>Chris Peterson is an aging homicide detective...</td>\n","    </tr>\n","    <tr>\n","      <th>9560</th>\n","      <td>Bploi wai dtaai: Leave Her to Die (2008)</td>\n","      <td>7</td>\n","      <td>A 2 year old baby girl lay alone on a bamboo ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9560 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e662bc49-69ad-4c8b-84b2-944513f6e67a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e662bc49-69ad-4c8b-84b2-944513f6e67a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e662bc49-69ad-4c8b-84b2-944513f6e67a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-74769be4-50c0-49fa-a675-f936e418c668\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74769be4-50c0-49fa-a675-f936e418c668')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74769be4-50c0-49fa-a675-f936e418c668 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1a02ac06-18d6-47ee-9992-34f9eb4e6cf2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('movie_genre')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1a02ac06-18d6-47ee-9992-34f9eb4e6cf2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('movie_genre');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["                                           title  genre  \\\n","1                  Oscar et la dame rose (2009)       8   \n","2                                  Cupid (1997)      24   \n","3              Young, Wild and Wonderful (1980)       1   \n","4                         The Secret Sin (1915)       8   \n","5                        The Unrecovered (2007)       8   \n","...                                          ...    ...   \n","9556                   No Stone Unturned (2017)       7   \n","9557       La vraie nature de Bernadette (1972)       8   \n","9558                The Comedy of Errors (2012)       5   \n","9559                  Beyond Good & Evil (2008)       8   \n","9560   Bploi wai dtaai: Leave Her to Die (2008)       7   \n","\n","                                            description  \n","1      Listening in to a conversation between his do...  \n","2      A brother and sister with a past incestuous r...  \n","3      As the bus empties the students for their fie...  \n","4      To help their unemployed father make ends mee...  \n","5      The film's title refers not only to the un-re...  \n","...                                                 ...  \n","9556   Alex Gibney reopens the mysterious unsolved c...  \n","9557   A woman imbued with naturalistic and libertar...  \n","9558   Mendocino College Theatre Department presents...  \n","9559   Chris Peterson is an aging homicide detective...  \n","9560   A 2 year old baby girl lay alone on a bamboo ...  \n","\n","[9560 rows x 3 columns]"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["movie_genre['genre'] = label_encoder.fit_transform(movie_genre['genre'])\n","movie_genre"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PkT_ARgnDJg0"},"outputs":[],"source":["X = movie_genre['description']\n","Y = movie_genre['genre']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":363,"status":"ok","timestamp":1712771104175,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"rK_jJfZtDJin","outputId":"94191137-97dd-4e1d-fdec-6d4c12e1882b"},"outputs":[{"name":"stdout","output_type":"stream","text":["1        Listening in to a conversation between his do...\n","2        A brother and sister with a past incestuous r...\n","3        As the bus empties the students for their fie...\n","4        To help their unemployed father make ends mee...\n","5        The film's title refers not only to the un-re...\n","                              ...                        \n","9556     Alex Gibney reopens the mysterious unsolved c...\n","9557     A woman imbued with naturalistic and libertar...\n","9558     Mendocino College Theatre Department presents...\n","9559     Chris Peterson is an aging homicide detective...\n","9560     A 2 year old baby girl lay alone on a bamboo ...\n","Name: description, Length: 9560, dtype: object\n"]}],"source":["print(X)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":392,"status":"ok","timestamp":1712771112991,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"},"user_tz":-330},"id":"BesZEk7xDJmF","outputId":"ece1e58a-6d33-4b4c-8ff6-3955f7ad6c5a"},"outputs":[{"name":"stdout","output_type":"stream","text":["1        8\n","2       24\n","3        1\n","4        8\n","5        8\n","        ..\n","9556     7\n","9557     8\n","9558     5\n","9559     8\n","9560     7\n","Name: genre, Length: 9560, dtype: int64\n"]}],"source":["print(Y)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HLZeJxCSGZvA"},"outputs":[],"source":["X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.2,random_state = 2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8cdtt2xxGZxH"},"outputs":[],"source":["feature_extraction = TfidfVectorizer(min_df = 1,stop_words = 'english',max_features = 5000)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iuQMT3teGZ0X"},"outputs":[],"source":["\n","from sklearn.feature_extraction.text import CountVectorizer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uM7znaOmGZ7m"},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rtFDA3mLGZ_B"},"outputs":[],"source":["feature_extraction = CountVectorizer()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A2PTI0KrGkWs"},"outputs":[],"source":["X_train = [\"\" if x is None else x for x in X_train]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E0vURJ3qGkaG"},"outputs":[],"source":["x_train_num = feature_extraction.fit_transform(X_train)\n","x_test_num = feature_extraction.transform(X_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"10mJBr5LGki5"},"outputs":[],"source":["model = SVC()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"OFrcT_WrGkmc","outputId":"53a99d87-5650-4ceb-f68e-ab7eecee024e"},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"],"text/plain":["SVC()"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["model.fit(x_train_num,Y_train)"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"hxFf64DbGp3u","executionInfo":{"status":"error","timestamp":1712772362157,"user_tz":-330,"elapsed":14410,"user":{"displayName":"DUGGIREDDY VARSHINI","userId":"14005325367289563112"}},"outputId":"368b4465-3932-4fc4-da27-f88ce7120165"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'y_pred' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-3b06f9a93208>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#Prediction\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test_num\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Accuracy Score:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Classification Report:\\n\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclassification_report\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_pred' is not defined"]}],"source":["#Prediction\n","pred = model.predict(x_test_num)\n","print(\"Accuracy Score:\", accuracy_score(Y_test, y_pred))\n","print(\"Classification Report:\\n\", classification_report(Y_test, pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hIlmSTyQGqFV"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMaviSKWQw5lXW6jOSsO+YI"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}